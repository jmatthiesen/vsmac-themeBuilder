//
// Copyright (c) Microsoft Corp. (https://www.microsoft.com)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// Modified version of: https://github.com/mono/monodevelop/blob/master/main/src/addins/MonoDevelop.TextEditor/MonoDevelop.TextEditor/ThemeToClassification.cs
using System;
using System.Collections.Generic;

namespace VSMThemeBuilder.Utilities
{
    public static class ThemeToClassification
    {
        public static List<(string, string)> Map { get; } = new List<(string, string)>
        {
            ("preprocessor text", "Preprocessor region name"),
            ("punctuation", "punctuation"),
            ("string - escape character", "String(Escape)"),
            ("string - verbatim", "String Verbatim"),
            ("property name","User Property"),
            ("field name","User Field"),
            ("event name","User Event"),
            ("enum member name","User Enum Member"),
            ("class name", "User Types"),
            ("method name", "User Method"),
            ("constant name", "User Constant"),
            ("parameter name", "User Parameter"),
            ("delegate name", "User Types(Delegates)"),
            ("enum name", "User Types(Enums)"),
            ("interface name", "User Types(Interfaces)"),
            ("module name", ""),
            ("local name", "User Variable"),
            ("struct name", "User Types(Value types)"),
            ("type parameter name", "User Types(Type parameters)"),
            ("xml doc comment - attribute name", "Comment XML Doc Comment"),
            ("xml doc comment - attribute quotes", "Comment XML Doc Comment"),
            ("xml doc comment - attribute value", "Comment XML Doc Comment"),
            ("xml doc comment - cdata section", "Comment XML Doc Comment"),
            ("xml doc comment - comment", "Comment XML Doc Comment"),
            ("xml doc comment - delimiter", "Comment XML Doc Comment"),
            ("xml doc comment - entity reference", "Comment XML Doc Comment"),
            ("xml doc comment - name", "Comment XML Doc Comment"),
            ("xml doc comment - processing instruction", "Comment XML Doc Comment"),
            ("xml doc comment - text", "Comment XML Doc Comment"),
            ("xml literal - attribute name", "Xml Attribute"),
            ("xml literal - attribute quotes", "Xml Attribute Quotes"),
            ("xml literal - attribute value", "Xml Attribute Value"),
            ("xml literal - cdata section", "Xml CData Section"),
            ("xml literal - comment", "Xml Comment"),
            ("xml literal - delimiter", "Xml Delimiter"),
            ("xml literal - embedded expression", ""),
            ("xml literal - entity reference", ""),
            ("xml literal - name", "Xml Name"),
            ("xml literal - processing instruction", ""),
            ("xml literal - text", "Xml Text"),
            ("axml - attribute name", "Xml Attribute"),
            ("axml - attribute quotes", "Xml Attribute Quotes"),
            ("axml - attribute value", "Xml Attribute Value"),
            ("axml - cdata section", "Xml CData Section"),
            ("axml - comment", "Xml Comment"),
            ("axml - delimiter", "Xml Delimiter"),
            ("axml - embedded expression", ""),
            ("axml - entity reference", ""),
            ("axml - name", "Xml Name"),
            ("axml - processing instruction", ""),
            ("axml - text", "Xml Text"),
            ("axml - resource url", "Xml Name"),
            ("XAML Attribute", "Xml Attribute"),
            ("XAML Attribute Quotes", "Xml Attribute Quotes"),
            ("XAML Attribute Value", "Xml Attribute Value"),
            ("XAML CData Section", "Xml CData Section"),
            ("XAML Comment", "Xml Comment"),
            ("XAML Delimiter", "Xml Delimiter"),
            ("XAML Keyword", "Xml Name"),
            ("XAML Markup Extension Class", "Xml Name"),
            ("XAML Markup Extension Parameter Name", "Xml Name"),
            ("XAML Markup Extension Parameter Value", "Xml Name"),
            ("XAML Name", "Xml Name"),
            ("XAML Processing Instruction", ""),
            ("XAML Text", "Xml Text"),
            ("Peek Background", ""),
            ("Peek Background Unfocused", ""),
            ("Peek History Selected", ""),
            ("Peek History Hovered", ""),
            ("Peek Focused Border", ""),
            ("Peek Label Text", ""),
            ("Peek Highlighted Text", ""),
            ("Peek Highlighted Text Unfocused", ""),
            ("Comment", "Comment"),
            ("Excluded Code", "Excluded Code"),
            ("Keyword", "Keyword"),
            ("Preprocessor Keyword", "Preprocessor"),
            ("Operator", "Keyword(Operator)"),
            ("Literal", "Number"),
            ("Markup Attribute", "Xml Attribute"),
            ("Markup Attribute Value", "Xml Attribute Value"),
            ("Markup Node", "Xml Name"),
            ("String", "String"),
            ("Type", "User Types"),
            ("Number", "Number"),
            ("SymbolDefinitionClassificationFormat", ""),
            ("SymbolReferenceClassificationFormat", ""),
            ("Natural Language Priority", ""),
            ("Formal Language Priority", ""),
            ("outlining.collapsehintadornment", ""),
            ("outlining.verticalrule", ""),
            ("SigHelpDocumentationFormat", ""),
            ("CurrentParameterFormat", ""),
            ("bookmark", ""),
            ("breakpoint", ""),
            ("currentstatement", ""),
            ("returnstatement", ""),
            ("stepbackcurrentstatement", ""),
            ("vivid", ""),
            ("blue", ""),
            ("remove line", ""),
            ("add line", ""),
            ("remove word", ""),
            ("add word", ""),
            ("bracehighlight", ""),
            ("BraceCompletionClosingBrace", ""),
            ("outlining.collapsehintadornment.background", "" ),
            ("CSS Comment", "CSS Comment"),
            ("CSS Property Name", "CSS Property Name"),
            ("CSS Property Value", "CSS Property Value"),
            ("CSS Selector", "CSS Selector"),
            ("CSS String Value", "CSS String Value"),
            ("CSS Keyword", "CSS Keyword"),
            ("HTML Attribute Name", "HTML Attribute Name"),
            ("HTML Attribute Value", "HTML Attribute Value"),
            ("HTML Comment", "HTML Comment"),
            ("HTML Element Name", "HTML Element Name"),
            ("HTML Entity", "HTML Entity"),
            ("HTML Operator", "HTML Operator"),
            ("HTML Server-Side Script", "HTML Server-Side Script"),
            ("HTML Tag Delimiter", "HTML Tag Delimiter"),
            ("JSON Property Name", "User Types"),
            ("taskformat", "Comment Tags"),
            ("extension method name", "extension method name"),
            ("keyword - control", "keyword - control"),
            ("operator - overloaded", "operator - overloaded"),
            ("regex - comment", "String(Regex Comments)"),
            ("regex - character class", "String(Regex Character Class)"),
            ("regex - anchor", "String(Regex Anchor)"),
            ("regex - quantifier", "String(Regex Quantifier)"),
            ("regex - grouping", "String(Regex Grouping Constructs)"),
            ("regex - alternation", "String(Regex Alternation)"),
            ("regex - text", "String(Regex Text)"),
            ("regex - self escaped character", "String(Regex Self Escaped Character)"),
            ("regex - other escape", "String(Regex Alt Escape Character)"),
            ("identifier", "identifier"),
        };
    }
}
